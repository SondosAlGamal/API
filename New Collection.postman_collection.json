{
	"info": {
		"_postman_id": "e4ca4d30-ba96-4f3c-9940-b9a1db61622f",
		"name": "New Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23052094"
	},
	"item": [
		{
			"name": "Authors",
			"item": [
				{
					"name": "GET All Authors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//check response\r",
									"console.log(pm.response.code)\r",
									"console.log(pm.response.status)\r",
									"pm.test(\"status code should equal 200\",function(){\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"});\r",
									"pm.test(\"Status  should be OK\", function () {\r",
									"    pm.expect(pm.response.status).to.equal(\"OK\")\r",
									"    \r",
									"});\r",
									"   \r",
									"//check objects inside response contain  id,idBook,firstName,lastName\r",
									"pm.test(\"response should contain id\",function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"id\")\r",
									"});\r",
									"pm.test(\"response should contain idBook\",function()\r",
									"{\r",
									"    pm.expect(pm.response.text()).to.include(\"idBook\")\r",
									"});\r",
									"pm.test(\"response should contain firstName\",function()\r",
									"{\r",
									"    pm.expect(pm.response.text()).to.include(\"firstName\")\r",
									"});\r",
									"pm.test(\"response should contain lastName\",function()\r",
									"{\r",
									"    pm.expect(pm.response.text()).to.include(\"lastName\")\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base URL}}/api/v1/Authors",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"api",
								"v1",
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Authors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//register new valid author successfully\r",
									"\r",
									"pm.test(\"new valid author registered successfully\",function()\r",
									"{\r",
									"    pm.expect(pm.response.code).to.equal(201)\r",
									"});\r",
									"var jsonData =pm.response.json();\r",
									"pm.test(\"check id\",function()\r",
									"{\r",
									"    pm.expect(jsonData.id).to.equal(1);\r",
									"});\r",
									"pm.test(\"check idBook\",function()\r",
									"{\r",
									"    pm.expect(jsonData.idBook).to.equal(5);\r",
									"});\r",
									"pm.test(\"check firstName\",function()\r",
									"{\r",
									"    pm.expect(jsonData.firstName).to.equal(\"Sondos\");\r",
									"});\r",
									"pm.test(\"check lastName\",function()\r",
									"{\r",
									"    pm.expect(jsonData.lastName).to.equal(\"Wael\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 1,\r\n  \"idBook\": 5,\r\n  \"firstName\": \"Sondos\",\r\n  \"lastName\": \"Wael\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base URL}}/api/v1/Authors",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"api",
								"v1",
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET idBook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData =pm.response.json()[0];\r",
									"pm.test(\" idBook should equal 5\",function()\r",
									"{\r",
									"    pm.expect(jsonData.idBook).to.equal(5);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base URL}}/api/v1/Authors/authors/books/5",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"api",
								"v1",
								"Authors",
								"authors",
								"books",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Authors id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code should equal 200\",function(){\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"});\r",
									"pm.test(\"Status  should be OK\", function () {\r",
									"    pm.expect(pm.response.status).to.equal(\"OK\")\r",
									"    \r",
									"});\r",
									"   "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 6,\r\n  \"idBook\": 10,\r\n  \"firstName\": \"Sondos\",\r\n  \"lastName\": \"Wael\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Base URL}}/api/v1/Authors/6",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"api",
								"v1",
								"Authors",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Authors id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code should equal 400\",function(){\r",
									"    pm.expect(pm.response.code).to.equal(400)\r",
									"});\r",
									"pm.test(\"Status  should be bad request\", function () {\r",
									"    pm.expect(pm.response.status).to.equal(\"bad request\")\r",
									"    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base URL}}/api/v1/Authors/6",
							"host": [
								"{{Base URL}}"
							],
							"path": [
								"api",
								"v1",
								"Authors",
								"6"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}